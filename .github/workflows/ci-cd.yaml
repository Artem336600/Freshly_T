name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'            # staging (semantic tags v1.2.3)
      - 'release-*'     # prod (release tags)
  workflow_dispatch: {}

env:
  KUBE_NAMESPACE_DEV: dev
  KUBE_NAMESPACE_STAGING: staging
  KUBE_NAMESPACE_PROD: prod
  IMAGE: ghcr.io/<OWNER>/<REPO>

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ github.sha }}

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
      - name: Deploy to dev
        run: |
          kubectl -n $KUBE_NAMESPACE_DEV set image deployment/my-deployment my-container=${{ env.IMAGE }}:${{ github.sha }} --record || true
          kubectl -n $KUBE_NAMESPACE_DEV apply -f k8s/overlays/dev/

  deploy-staging:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_STAGING }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
      - name: Deploy to staging
        run: |
          kubectl -n $KUBE_NAMESPACE_STAGING set image deployment/my-deployment my-container=${{ env.IMAGE }}:${{ github.ref_name }} --record || true
          kubectl -n $KUBE_NAMESPACE_STAGING apply -f k8s/overlays/staging/

  deploy-prod:
    needs: build
    if: startsWith(github.ref, 'refs/tags/release-')
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://my.prod.url
    steps:
      - uses: actions/checkout@v4
      - name: Wait for manual approval / Deploy
        run: |
          echo "${{ secrets.KUBE_CONFIG_PROD }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl -n $KUBE_NAMESPACE_PROD set image deployment/my-deployment my-container=${{ env.IMAGE }}:${{ github.ref_name }} --record || true
          kubectl -n $KUBE_NAMESPACE_PROD apply -f k8s/overlays/prod/
