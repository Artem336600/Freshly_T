name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          'bot-gateway-service',
          'user-management-service',
          'emotional-support-service',
          'scheduler-service',
          'analytics-service'
        ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/${{ matrix.service }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd services/${{ matrix.service }}
        npm ci
    
    - name: Run tests
      run: |
        cd services/${{ matrix.service }}
        npm test
    
    - name: Run linting
      run: |
        cd services/${{ matrix.service }}
        npm run lint

  test-python-services:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          'food-recognition-service',
          'photo-analysis-service'
        ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd services/${{ matrix.service }}
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd services/${{ matrix.service }}
        python -m pytest tests/

  build:
    needs: [test, test-python-services]
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [
          'bot-gateway-service',
          'user-management-service',
          'food-recognition-service',
          'emotional-support-service',
          'scheduler-service',
          'photo-analysis-service',
          'analytics-service',
          'database-service'
        ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        cd services/${{ matrix.service }}
        docker build -t freshly/${{ matrix.service }}:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm freshly/${{ matrix.service }}:latest --help || true

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Kubernetes
      run: |
        echo "Deploying to Kubernetes cluster..."
        # Здесь будет команда для деплоя в Kubernetes
        # kubectl apply -f k8s/
