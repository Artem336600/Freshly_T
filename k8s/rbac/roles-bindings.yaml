# Dev: full access for dev-team (be careful in prod!)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-full
  namespace: dev
rules:
  - apiGroups: ["", "apps", "batch", "extensions"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-full-binding
  namespace: dev
subjects:
  - kind: Group
    name: "dev-team"        # заменить на группу/карту идентификаторов (например, OIDC group)
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: dev-full
  apiGroup: rbac.authorization.k8s.io

# Staging: read-only for developers; deploy via ci-deployer
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: staging-read
  namespace: staging
rules:
  - apiGroups: [""]
    resources: ["pods","services","configmaps","secrets"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: staging-read-binding
  namespace: staging
subjects:
  - kind: Group
    name: "dev-team"
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: staging-read
  apiGroup: rbac.authorization.k8s.io

# allow ci-deployer to apply deployments in staging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: staging-deploy
  namespace: staging
rules:
  - apiGroups: ["apps"]
    resources: ["deployments","statefulsets"]
    verbs: ["get","list","watch","create","update","patch","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-deployer-staging-binding
  namespace: staging
subjects:
  - kind: ServiceAccount
    name: ci-deployer
    namespace: staging
roleRef:
  kind: Role
  name: staging-deploy
  apiGroup: rbac.authorization.k8s.io

# Prod: only CI has deploy rights; team read-only
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prod-read
  namespace: prod
rules:
  - apiGroups: [""]
    resources: ["pods","services","endpoints","configmaps"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prod-read-binding
  namespace: prod
subjects:
  - kind: Group
    name: "ops-team"   # или dev-team read-only
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: prod-read
  apiGroup: rbac.authorization.k8s.io

# allow ci-deployer (from prod namespace) to deploy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prod-deploy
  namespace: prod
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get","list","watch","create","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-deployer-prod-binding
  namespace: prod
subjects:
  - kind: ServiceAccount
    name: ci-deployer
    namespace: prod
roleRef:
  kind: Role
  name: prod-deploy
  apiGroup: rbac.authorization.k8s.io
